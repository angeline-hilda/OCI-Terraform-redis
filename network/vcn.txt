######################################################################
#                      Create network components                     # 
######################################################################

resource "oci_core_vcn" "oke" {
  count          = var.create_vcn ? 1 : 0
  cidr_blocks    = var.oke_vcn_cidr_block[*]
  dns_label      = var.oke_vcn_dns_label
  compartment_id = var.compartment_ocid
  display_name   = var.oke_vcn_display_name
  is_ipv6enabled = var.enable_ipv6
}
data "oci_core_vcn" "oke" {
  count          = var.create_vcn ? 0 : 1
  #compartment_id = var.compartment_ocid
  vcn_id        = var.existing_vcn_id
}


locals {
  vcn_id               = var.create_vcn ? try(one(oci_core_vcn.oke[*].id), var.existing_vcn_id) : var.existing_vcn_id
  vcn_lookup           = coalesce((data.oci_core_vcn.oke[*].cidr_blocks), [])
  vcn_lookup_cidr_blocks = flatten(local.vcn_lookup)
  vcn_cidrs            = var.create_vcn ? var.oke_vcn_cidr_block : local.vcn_lookup_cidr_blocks
  public_subnet_id     = var.create_subnets ? try(one(oci_core_subnet.public_subnet[*].id), var.existing_public_subnet_id) : var.existing_public_subnet_id
  db_subnet_id         = var.create_subnets ? try(one(oci_core_subnet.db_subnet[*].id), var.existing_db_subnet_id) : var.existing_db_subnet_id
  nat_gateway_id       = var.create_nat_gateway ? try(one(oci_core_nat_gateway.oke_nat_gateway[*].id), var.existing_nat_gateway_id) : var.existing_nat_gateway_id
  internet_gateway_id  = var.create_internet_gateway ? try(one(oci_core_internet_gateway.oke_internet_gateway[*].id), var.existing_internet_gateway_id) : var.existing_internet_gateway_id
  service_gateway_id   = var.create_service_gateway ? try(one(oci_core_service_gateway.oke_service_gateway[*].id), var.existing_service_gateway_id) : var.existing_service_gateway_id
  private_route_table_id       = var.create_private_route_table ? try(one(oci_core_route_table.oke_private_route_table[*].id), var.existing_private_route_table_id) : var.existing_private_route_table_id
  public_route_table_id       = var.create_public_route_table ? try(one(oci_core_route_table.oke_public_route_table[*].id), var.existing_public_route_table_id) : var.existing_public_route_table_id
}

resource "oci_core_subnet" "public_subnet" {
  count          = var.create_subnets ? 1 : 0
  cidr_block     = var.public_subnet_cidr_block
  compartment_id = var.compartment_ocid
  vcn_id         = local.vcn_id
  display_name   = var.public_subnet_display_name
  dns_label      = var.public_subnet_dns_label
  prohibit_public_ip_on_vnic = false
  route_table_id = local.public_route_table_id
  security_list_ids = var.create_vcn ? [oci_core_security_list.public_securitylist.id] : []
}

resource "oci_core_subnet" "db_subnet" {
  count          = var.create_subnets ? 1 : 0
  cidr_block     = var.db_subnet_cidr_block
  compartment_id = var.compartment_ocid
  vcn_id         = local.vcn_id
  dns_label      = var.db_subnet_dns_label
  display_name   = var.db_subnet_display_name
  prohibit_public_ip_on_vnic = true
  route_table_id = local.private_route_table_id
  security_list_ids = var.create_vcn ? [oci_core_security_list.db_securitylist.id] : []
}
resource "oci_core_internet_gateway" "oke_internet_gateway" {
  count          = var.create_internet_gateway ? 1 : 0
  compartment_id = var.compartment_ocid
  vcn_id         = var.create_vcn ? oci_core_vcn.oke[0].id : var.existing_vcn_id
  enabled = true
  display_name   = "oke-internet-gateway"
}

resource "oci_core_nat_gateway" "oke_nat_gateway" {
  count          = var.create_nat_gateway ? 1 : 0
  compartment_id = var.compartment_ocid
  vcn_id         = var.create_vcn ? oci_core_vcn.oke[0].id : var.existing_vcn_id
  display_name   = "oke-nat-gateway"
}

resource "oci_core_service_gateway" "oke_service_gateway" {
  count          = var.create_service_gateway ? 1 : 0
  compartment_id = var.compartment_ocid
  vcn_id         = var.create_vcn ? oci_core_vcn.oke[0].id : var.existing_vcn_id
  display_name   = "oke-service-gateway"
   services {
  service_id = lookup(data.oci_core_services.oke_services.services[0], "id")
  }
}



resource "oci_core_route_table" "oke_private_route_table" {
  count          = var.create_route_table ? 1 : 0
  compartment_id = var.compartment_ocid
  vcn_id         = var.create_vcn ? oci_core_vcn.oke[0].id : var.existing_vcn_id
  display_name   = "oke-private-route-table"

  route_rules {
    destination      = "0.0.0.0/0"
    destination_type = "CIDR_BLOCK"
    network_entity_id = var.create_nat_gateway ? try(one(oci_core_nat_gateway.oke_nat_gateway[*].id), var.existing_nat_gateway_id) : var.existing_nat_gateway_id
  }
  
  route_rules {
    destination      = lookup(data.oci_core_services.oke_services.services[0], "cidr_block")
    destination_type = "SERVICE_CIDR_BLOCK"
    network_entity_id = var.create_service_gateway ? try(one(oci_core_service_gateway.oke_service_gateway[*].id), var.existing_service_gateway_id) : var.existing_service_gateway_id
  }
}

resource "oci_core_route_table" "oke_public_route_table" {
  count          = var.create_route_table ? 1 : 0
  compartment_id = var.compartment_ocid
  vcn_id         = var.create_vcn ? oci_core_vcn.oke[0].id : var.existing_vcn_id
  display_name   = "oke-public-route-table"

  route_rules {
    destination      = "0.0.0.0/0"
    destination_type = "CIDR_BLOCK"
    network_entity_id = var.create_internet_gateway ? try(one(oci_core_internet_gateway.oke_internet_gateway[*].id), var.existing_internet_gateway_id) : var.existing_internet_gateway_id
  }
}

 # Install RedisInsight from GitHub
    cd /tmp
    wget https://github.com/RedisInsight/RedisInsight/archive/refs/tags/2.66.0.tar.gz -O RedisInsight.tar.gz
    tar -xvzf RedisInsight.tar.gz
    sudo mv RedisInsight-2.66.0 /opt/redisinsight
    sudo chmod -R 755 /opt/redisinsight

    # Start RedisInsight in the background
    nohup /opt/redisinsight/redisinsight > /dev/null 2>&1 &

    # Verify RedisInsight is running
    sleep 10
    if ! pgrep -f redisinsight; then
      echo "RedisInsight failed to start!" | sudo tee -a /var/log/cloud-init.log
      exit 1
    fi